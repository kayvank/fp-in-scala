* functional programming in Scala notes
** ยง 1
*** Referential Transparency, RT
    forces the invariant that everything a function does is represented by a value that is returned.
**** RT enables equational reasoning
*** Pure function 


** ยง 2
*** Polymorphic functions 
**** abstracting over types
     these are functions that work for any given type, also known as parametric polymorphism 
**** type parameters & type variable

** ยง 3

*** when function definition contains multiple argument groups, type info flows from left to right across args group

